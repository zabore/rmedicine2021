# remotes::install_github("zabore/ppseq")
library(ppseq)
library(ggplot2)
library(plotly)
library(tidyr)
library(dplyr)
library(forcats)
library(purrr)


# One-sample decision rules table
set.seed(123)
test1 <- calc_decision_rules(n = seq(5, 25, 5),
                             p0 = 0.1,
                             N = 25,
                             theta = 0.86, 
                             ppp = 0.2,
                             direction = "greater",
                             delta = NULL,
                             prior = c(0.5, 0.5),
                             S = 5000)

# Save and load the results
save(test1, file = "H:/ppseq-papers/two-sample/test1.rda")
load("H:/ppseq-papers/two-sample/test1.rda")

print(test1, n = Inf)
plot(test1)

# try plotting
test1_all <- 
  test1 %>% 
  filter(!is.na(r)) %>% 
  mutate(stop_criteria = r)

temp1 <- 
  tibble(
    n = unlist(map(test1$n, ~rep(.x, (.x + 1)))),
    r = unlist(map(test1$n, ~seq(from = 0, to = .x)))
  )

plotdat1 <- 
  full_join(
    temp1, test1_all
  ) %>% 
  group_by(n) %>% 
  fill(stop_criteria, .direction = "updown") %>% 
  mutate(Decision = case_when(
    r <= stop_criteria ~ "Stop",
    r > stop_criteria ~ "Proceed",
    is.na(stop_criteria) ~ "Proceed"
    )
  ) %>% 
  ungroup() %>% 
  mutate(
    n = paste0("N = ", n),
    n = fct_relevel(n, "N = 5", after = 0)
  ) %>% 
  rename(
    "# responses" = r,
    "N at interim analysis" = n
  )

p1 <- 
  ggplot(plotdat1, aes(x = `N at interim analysis`, 
                      y = `# responses`, 
                      fill = Decision)) + 
  geom_tile(color = "black") + 
  scale_fill_manual(values = c(ezfun::ccf_cols("ccf_green"), 
                               ezfun::ccf_cols("flamingo"))) +
  ezfun::theme_ezbasic() +
  scale_y_continuous(breaks = seq(from = 0, to = max(test1_all$n), by = 1), 
                     expand = c(0, 0))

ggplotly(p1)


# Two-sample decision rules table
set.seed(123)
test2 <- calc_decision_rules(n = cbind(seq(5, 25, 5), seq(5, 25, 5)),
                             N = c(25, 25),
                             theta = 0.86,
                             ppp = 0.2,
                             p0 = NULL,
                             direction = "greater",
                             delta = 0, 
                             prior = c(0.5, 0.5),
                             S = 5000)

# Save and load the results
save(test2, file = "H:/ppseq-papers/two-sample/test2.rda")
load("H:/ppseq-papers/two-sample/test2.rda")

print(test2, n = Inf)
plot(test2)

# Plot a heatmap result
test2_all <- 
  test2 %>% 
  filter(!is.na(r1)) %>% 
  mutate(stop_criteria = r1)

ss_tab <- 
  test2_all %>% 
  select(n0, n1) %>% 
  unique()

temp2 <- 
  tibble(
    n0 = unlist(map2(ss_tab$n0, ss_tab$n1, ~rep(.x, (.x + 1) * (.y + 1)))),
    n1 = unlist(map2(ss_tab$n0, ss_tab$n1, ~rep(.y, (.x + 1) * (.y + 1)))),
    r0 = unlist(map2(ss_tab$n0, ss_tab$n1, ~rep(seq(from = 0, to = .x), each = .y + 1))),
    r1 = unlist(map(ss_tab$n1, ~rep(seq(from = 0, to = .x), .x + 1)))
  )

plotdat2 <- 
  full_join(
    temp2, test2_all
  ) %>% 
  group_by(r0) %>% 
  fill(stop_criteria, .direction = "updown") %>% 
  mutate(Decision = case_when(
    r1 <= stop_criteria ~ "Stop",
    r1 > stop_criteria ~ "Proceed",
    is.na(stop_criteria) ~ "Proceed"
    )
    ) %>% 
  ungroup() %>% 
  mutate(
    n0 = paste0("N control = ", n0),
    n1 = paste0("N experimental = ", n1),
    n0 = fct_relevel(n0, "N control = 5", after = 0),
    n1 = fct_relevel(n1, "N experimental = 5", after = 0)
  ) %>% 
  rename(
    "# responses control" = r0,
    "# responses experimental" = r1
  )

p2 <- 
  ggplot(plotdat2, aes(x = `# responses control`, 
                       y = `# responses experimental`, 
                       fill = Decision)) + 
  facet_wrap(~n0 + n1, scales = "free") +
  geom_tile(color = "black") + 
  scale_fill_manual(values = c(ezfun::ccf_cols("ccf_green"), 
                               ezfun::ccf_cols("flamingo"))) +
  ezfun::theme_ezbasic() +
  scale_x_continuous(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0, 0))

ggplotly(p2)


# Notes:
# How to make scales have integer breaks - easy for one, hard for facets
# At final sample size there isn't really a Proceed/Stop divide but rather a Success/Failure divide - should relabel



